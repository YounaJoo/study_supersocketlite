// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(13)
            {
                { typeof(global::System.Collections.Generic.List<string>), 0 },
                { typeof(global::CSBaseLib.PKNtfMustClose), 1 },
                { typeof(global::CSBaseLib.PKTNtfRoomChat), 2 },
                { typeof(global::CSBaseLib.PKTNtfRoomLeaveUser), 3 },
                { typeof(global::CSBaseLib.PKTNtfRoomNewUser), 4 },
                { typeof(global::CSBaseLib.PKTNtfRoomUserList), 5 },
                { typeof(global::CSBaseLib.PKTReqLogin), 6 },
                { typeof(global::CSBaseLib.PKTReqRoomChat), 7 },
                { typeof(global::CSBaseLib.PKTReqRoomEnter), 8 },
                { typeof(global::CSBaseLib.PKTReqRoomLeave), 9 },
                { typeof(global::CSBaseLib.PKTResLogin), 10 },
                { typeof(global::CSBaseLib.PKTResRoomEnter), 11 },
                { typeof(global::CSBaseLib.PKTResRoomLeave), 12 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.ListFormatter<string>();
                case 1: return new MessagePack.Formatters.CSBaseLib.PKNtfMustCloseFormatter();
                case 2: return new MessagePack.Formatters.CSBaseLib.PKTNtfRoomChatFormatter();
                case 3: return new MessagePack.Formatters.CSBaseLib.PKTNtfRoomLeaveUserFormatter();
                case 4: return new MessagePack.Formatters.CSBaseLib.PKTNtfRoomNewUserFormatter();
                case 5: return new MessagePack.Formatters.CSBaseLib.PKTNtfRoomUserListFormatter();
                case 6: return new MessagePack.Formatters.CSBaseLib.PKTReqLoginFormatter();
                case 7: return new MessagePack.Formatters.CSBaseLib.PKTReqRoomChatFormatter();
                case 8: return new MessagePack.Formatters.CSBaseLib.PKTReqRoomEnterFormatter();
                case 9: return new MessagePack.Formatters.CSBaseLib.PKTReqRoomLeaveFormatter();
                case 10: return new MessagePack.Formatters.CSBaseLib.PKTResLoginFormatter();
                case 11: return new MessagePack.Formatters.CSBaseLib.PKTResRoomEnterFormatter();
                case 12: return new MessagePack.Formatters.CSBaseLib.PKTResRoomLeaveFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name




// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.CSBaseLib
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class PKNtfMustCloseFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKNtfMustClose>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKNtfMustClose value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.PKNtfMustClose Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKNtfMustClose();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTNtfRoomChatFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTNtfRoomChat>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTNtfRoomChat value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.ChatMessage, options);
        }

        public global::CSBaseLib.PKTNtfRoomChat Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);
            var __ChatMessage__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __ChatMessage__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTNtfRoomChat();
            ____result.UserID = __UserID__;
            ____result.ChatMessage = __ChatMessage__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTNtfRoomLeaveUserFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTNtfRoomLeaveUser>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTNtfRoomLeaveUser value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
        }

        public global::CSBaseLib.PKTNtfRoomLeaveUser Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTNtfRoomLeaveUser();
            ____result.UserID = __UserID__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTNtfRoomNewUserFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTNtfRoomNewUser>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTNtfRoomNewUser value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
        }

        public global::CSBaseLib.PKTNtfRoomNewUser Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTNtfRoomNewUser();
            ____result.UserID = __UserID__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTNtfRoomUserListFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTNtfRoomUserList>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTNtfRoomUserList value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.List<string>>().Serialize(ref writer, value.UserIDList, options);
        }

        public global::CSBaseLib.PKTNtfRoomUserList Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserIDList__ = default(global::System.Collections.Generic.List<string>);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserIDList__ = formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.List<string>>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTNtfRoomUserList();
            ____result.UserIDList = __UserIDList__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqLoginFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTReqLogin>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTReqLogin value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.AuthToken, options);
        }

        public global::CSBaseLib.PKTReqLogin Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);
            var __AuthToken__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __AuthToken__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTReqLogin();
            ____result.UserID = __UserID__;
            ____result.AuthToken = __AuthToken__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqRoomChatFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTReqRoomChat>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTReqRoomChat value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.ChatMessage, options);
        }

        public global::CSBaseLib.PKTReqRoomChat Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __ChatMessage__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __ChatMessage__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTReqRoomChat();
            ____result.ChatMessage = __ChatMessage__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqRoomEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTReqRoomEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTReqRoomEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.RoomNumber);
        }

        public global::CSBaseLib.PKTReqRoomEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __RoomNumber__ = default(int);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __RoomNumber__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTReqRoomEnter();
            ____result.RoomNumber = __RoomNumber__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqRoomLeaveFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTReqRoomLeave>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTReqRoomLeave value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::CSBaseLib.PKTReqRoomLeave Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTReqRoomLeave();
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTResLoginFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTResLogin>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTResLogin value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.PKTResLogin Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTResLogin();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTResRoomEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTResRoomEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTResRoomEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.PKTResRoomEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTResRoomEnter();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTResRoomLeaveFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTResRoomLeave>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTResRoomLeave value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.PKTResRoomLeave Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTResRoomLeave();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

