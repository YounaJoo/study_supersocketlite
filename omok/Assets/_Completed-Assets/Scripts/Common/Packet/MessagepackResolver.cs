// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(19)
            {
                { typeof(global::CSBaseLib.OMKMustClose), 0 },
                { typeof(global::CSBaseLib.OMKNtfGameReady), 1 },
                { typeof(global::CSBaseLib.OMKNtfOmokGameRes), 2 },
                { typeof(global::CSBaseLib.OMKNtfOmokTurn), 3 },
                { typeof(global::CSBaseLib.OMKReqGameReady), 4 },
                { typeof(global::CSBaseLib.OMKReqLogin), 5 },
                { typeof(global::CSBaseLib.OMKReqOmokGame), 6 },
                { typeof(global::CSBaseLib.OMKReqRoomChat), 7 },
                { typeof(global::CSBaseLib.OMKReqRoomLeave), 8 },
                { typeof(global::CSBaseLib.OMKResGameReady), 9 },
                { typeof(global::CSBaseLib.OMKResLogin), 10 },
                { typeof(global::CSBaseLib.OMKResOmokTurn), 11 },
                { typeof(global::CSBaseLib.OMKResRoomChat), 12 },
                { typeof(global::CSBaseLib.OMKResRoomEnter), 13 },
                { typeof(global::CSBaseLib.OMKResRoomLeave), 14 },
                { typeof(global::CSBaseLib.OMKRoomLeaveUser), 15 },
                { typeof(global::CSBaseLib.OMKRoomNewUser), 16 },
                { typeof(global::CSBaseLib.OMKRoomUserList), 17 },
                { typeof(global::CSBaseLib.PKTReqRoomEnter), 18 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new MessagePack.Formatters.CSBaseLib.OMKMustCloseFormatter();
                case 1: return new MessagePack.Formatters.CSBaseLib.OMKNtfGameReadyFormatter();
                case 2: return new MessagePack.Formatters.CSBaseLib.OMKNtfOmokGameResFormatter();
                case 3: return new MessagePack.Formatters.CSBaseLib.OMKNtfOmokTurnFormatter();
                case 4: return new MessagePack.Formatters.CSBaseLib.OMKReqGameReadyFormatter();
                case 5: return new MessagePack.Formatters.CSBaseLib.OMKReqLoginFormatter();
                case 6: return new MessagePack.Formatters.CSBaseLib.OMKReqOmokGameFormatter();
                case 7: return new MessagePack.Formatters.CSBaseLib.OMKReqRoomChatFormatter();
                case 8: return new MessagePack.Formatters.CSBaseLib.OMKReqRoomLeaveFormatter();
                case 9: return new MessagePack.Formatters.CSBaseLib.OMKResGameReadyFormatter();
                case 10: return new MessagePack.Formatters.CSBaseLib.OMKResLoginFormatter();
                case 11: return new MessagePack.Formatters.CSBaseLib.OMKResOmokTurnFormatter();
                case 12: return new MessagePack.Formatters.CSBaseLib.OMKResRoomChatFormatter();
                case 13: return new MessagePack.Formatters.CSBaseLib.OMKResRoomEnterFormatter();
                case 14: return new MessagePack.Formatters.CSBaseLib.OMKResRoomLeaveFormatter();
                case 15: return new MessagePack.Formatters.CSBaseLib.OMKRoomLeaveUserFormatter();
                case 16: return new MessagePack.Formatters.CSBaseLib.OMKRoomNewUserFormatter();
                case 17: return new MessagePack.Formatters.CSBaseLib.OMKRoomUserListFormatter();
                case 18: return new MessagePack.Formatters.CSBaseLib.PKTReqRoomEnterFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name




// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.CSBaseLib
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class OMKMustCloseFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKMustClose>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKMustClose value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.OMKMustClose Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKMustClose();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKNtfGameReadyFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKNtfGameReady>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKNtfGameReady value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.OMKNtfGameReady Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKNtfGameReady();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKNtfOmokGameResFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKNtfOmokGameRes>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKNtfOmokGameRes value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.Result);
            writer.Write(value.userPos);
        }

        public global::CSBaseLib.OMKNtfOmokGameRes Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);
            var __userPos__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    case 1:
                        __userPos__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKNtfOmokGameRes();
            ____result.Result = __Result__;
            ____result.userPos = __userPos__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKNtfOmokTurnFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKNtfOmokTurn>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKNtfOmokTurn value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            writer.Write(value.UserPos);
            writer.Write(value.X);
            writer.Write(value.Y);
        }

        public global::CSBaseLib.OMKNtfOmokTurn Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserPos__ = default(short);
            var __X__ = default(int);
            var __Y__ = default(int);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserPos__ = reader.ReadInt16();
                        break;
                    case 1:
                        __X__ = reader.ReadInt32();
                        break;
                    case 2:
                        __Y__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKNtfOmokTurn();
            ____result.UserPos = __UserPos__;
            ____result.X = __X__;
            ____result.Y = __Y__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKReqGameReadyFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKReqGameReady>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKReqGameReady value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.UserPos);
        }

        public global::CSBaseLib.OMKReqGameReady Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserPos__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserPos__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKReqGameReady();
            ____result.UserPos = __UserPos__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKReqLoginFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKReqLogin>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKReqLogin value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.AuthToken, options);
        }

        public global::CSBaseLib.OMKReqLogin Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);
            var __AuthToken__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __AuthToken__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKReqLogin();
            ____result.UserID = __UserID__;
            ____result.AuthToken = __AuthToken__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKReqOmokGameFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKReqOmokGame>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKReqOmokGame value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.X);
            writer.Write(value.Y);
        }

        public global::CSBaseLib.OMKReqOmokGame Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __X__ = default(int);
            var __Y__ = default(int);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __X__ = reader.ReadInt32();
                        break;
                    case 1:
                        __Y__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKReqOmokGame();
            ____result.X = __X__;
            ____result.Y = __Y__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKReqRoomChatFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKReqRoomChat>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKReqRoomChat value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.ChatMessage, options);
        }

        public global::CSBaseLib.OMKReqRoomChat Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __ChatMessage__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __ChatMessage__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKReqRoomChat();
            ____result.ChatMessage = __ChatMessage__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKReqRoomLeaveFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKReqRoomLeave>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKReqRoomLeave value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(0);
        }

        public global::CSBaseLib.OMKReqRoomLeave Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKReqRoomLeave();
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKResGameReadyFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKResGameReady>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKResGameReady value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.OMKResGameReady Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKResGameReady();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKResLoginFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKResLogin>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKResLogin value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.OMKResLogin Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKResLogin();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKResOmokTurnFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKResOmokTurn>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKResOmokTurn value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.OMKResOmokTurn Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKResOmokTurn();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKResRoomChatFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKResRoomChat>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKResRoomChat value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.ChatMessage, options);
        }

        public global::CSBaseLib.OMKResRoomChat Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);
            var __ChatMessage__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __ChatMessage__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKResRoomChat();
            ____result.UserID = __UserID__;
            ____result.ChatMessage = __ChatMessage__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKResRoomEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKResRoomEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKResRoomEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            writer.Write(value.Result);
            writer.Write(value.UserPos);
        }

        public global::CSBaseLib.OMKResRoomEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);
            var __UserPos__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    case 1:
                        __UserPos__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKResRoomEnter();
            ____result.Result = __Result__;
            ____result.UserPos = __UserPos__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKResRoomLeaveFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKResRoomLeave>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKResRoomLeave value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::CSBaseLib.OMKResRoomLeave Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKResRoomLeave();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKRoomLeaveUserFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKRoomLeaveUser>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKRoomLeaveUser value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
        }

        public global::CSBaseLib.OMKRoomLeaveUser Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKRoomLeaveUser();
            ____result.UserID = __UserID__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKRoomNewUserFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKRoomNewUser>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKRoomNewUser value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
        }

        public global::CSBaseLib.OMKRoomNewUser Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKRoomNewUser();
            ____result.UserID = __UserID__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class OMKRoomUserListFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.OMKRoomUserList>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.OMKRoomUserList value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string[]>().Serialize(ref writer, value.UserIDList, options);
        }

        public global::CSBaseLib.OMKRoomUserList Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserIDList__ = default(string[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserIDList__ = formatterResolver.GetFormatterWithVerify<string[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.OMKRoomUserList();
            ____result.UserIDList = __UserIDList__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqRoomEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CSBaseLib.PKTReqRoomEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::CSBaseLib.PKTReqRoomEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.RoomNumber);
        }

        public global::CSBaseLib.PKTReqRoomEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __RoomNumber__ = default(int);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __RoomNumber__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::CSBaseLib.PKTReqRoomEnter();
            ____result.RoomNumber = __RoomNumber__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

